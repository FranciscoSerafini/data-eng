El proyecto consiste en realizar una ingesta de datos desde diversas fuentes, posteriormente aplicar las transformaciones que consideren pertinentes, y luego disponibilizar los datos limpios para su consulta a través de una API. Esta API deberán construirla en un entorno virtual dockerizado.

Los datos son provistos en archivos de diferentes extensiones, como csv o json. Se espera que realice un EDA para cada dataset y se corrijan los tipos de datos, valores nulos y duplicados, entre otras tareas. Posteriormente, hay que relacionar los datasets así pueden acceder a su información por medio de consultas a la API.

Las consultas a realizar son:

Máxima duración según tipo de film (película/serie), por plataforma y por año: El request debe ser: get_max_duration(año, plataforma, [min o season])

Cantidad de películas y series (separado) por plataforma El request debe ser: get_count_plataform(plataforma)

Cantidad de veces que se repite un género y plataforma con mayor frecuencia del mismo. El request debe ser: get_listedin('genero')
Como ejemplo de género se puede usar 'comedy', el cuál deberia devolver un cunt de 2099 para la plataforma de amazon.

Actor que más se repite según plataforma y año. El request debe ser: get_actor(plataforma, año)



Pasos realizados en el proyecto:
Como primera instancia se realiza un EDA (Analisis Exploratorio de Datos)

Una vez analizados los datos se procede con un ETL (Extracción, Transformación y Carga) de dichos datos

Dado que las consultas a realizar a travez de la API solo exigen cierta cantidad de datos se procede a eliminar las columnas innecesarias, siempre dejando previamente, un dataset completo con el EDA y el ETL realizado del paso anterior. Esto en caso de que se debiera retomar los mismos datos para futuras consultas diferentes a las planteadas para este proyecto.

Se procede a generar una API que me permita generar las consultas por medio de funciones y levantar una interfaz visual en el navegador por medio de la erramienta UVICORN.

Una ves verificado el funcionamiento de la API se procede a Dokerizar el proyecto utilizando una imagen de PYTHON 3.10.5

Cuando el proyecto ya es viable y esta probado se sube a Git-Hub

Como Plus se despliega un contenedor en https://mogenius.com/